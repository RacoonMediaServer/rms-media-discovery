// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateUserReader is a Reader for the CreateUser structure.
type CreateUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewCreateUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateUserOK creates a CreateUserOK with default headers values
func NewCreateUserOK() *CreateUserOK {
	return &CreateUserOK{}
}

/*
CreateUserOK describes a response with status code 200, with default header values.

OK
*/
type CreateUserOK struct {
	Payload *CreateUserOKBody
}

// IsSuccess returns true when this create user o k response has a 2xx status code
func (o *CreateUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create user o k response has a 3xx status code
func (o *CreateUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user o k response has a 4xx status code
func (o *CreateUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create user o k response has a 5xx status code
func (o *CreateUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create user o k response a status code equal to that given
func (o *CreateUserOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create user o k response
func (o *CreateUserOK) Code() int {
	return 200
}

func (o *CreateUserOK) Error() string {
	return fmt.Sprintf("[POST /admin/users][%d] createUserOK  %+v", 200, o.Payload)
}

func (o *CreateUserOK) String() string {
	return fmt.Sprintf("[POST /admin/users][%d] createUserOK  %+v", 200, o.Payload)
}

func (o *CreateUserOK) GetPayload() *CreateUserOKBody {
	return o.Payload
}

func (o *CreateUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateUserOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUserInternalServerError creates a CreateUserInternalServerError with default headers values
func NewCreateUserInternalServerError() *CreateUserInternalServerError {
	return &CreateUserInternalServerError{}
}

/*
CreateUserInternalServerError describes a response with status code 500, with default header values.

Ошибка на стороне сервера
*/
type CreateUserInternalServerError struct {
}

// IsSuccess returns true when this create user internal server error response has a 2xx status code
func (o *CreateUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user internal server error response has a 3xx status code
func (o *CreateUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user internal server error response has a 4xx status code
func (o *CreateUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create user internal server error response has a 5xx status code
func (o *CreateUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create user internal server error response a status code equal to that given
func (o *CreateUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create user internal server error response
func (o *CreateUserInternalServerError) Code() int {
	return 500
}

func (o *CreateUserInternalServerError) Error() string {
	return fmt.Sprintf("[POST /admin/users][%d] createUserInternalServerError ", 500)
}

func (o *CreateUserInternalServerError) String() string {
	return fmt.Sprintf("[POST /admin/users][%d] createUserInternalServerError ", 500)
}

func (o *CreateUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
CreateUserBody create user body
swagger:model CreateUserBody
*/
type CreateUserBody struct {

	// info
	// Required: true
	Info *string `json:"info"`

	// is admin
	IsAdmin *bool `json:"isAdmin,omitempty"`
}

// Validate validates this create user body
func (o *CreateUserBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateUserBody) validateInfo(formats strfmt.Registry) error {

	if err := validate.Required("user"+"."+"info", "body", o.Info); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create user body based on context it is used
func (o *CreateUserBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateUserBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateUserBody) UnmarshalBinary(b []byte) error {
	var res CreateUserBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
CreateUserOKBody create user o k body
swagger:model CreateUserOKBody
*/
type CreateUserOKBody struct {

	// id
	// Required: true
	ID *string `json:"id"`
}

// Validate validates this create user o k body
func (o *CreateUserOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateUserOKBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("createUserOK"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create user o k body based on context it is used
func (o *CreateUserOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateUserOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateUserOKBody) UnmarshalBinary(b []byte) error {
	var res CreateUserOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
