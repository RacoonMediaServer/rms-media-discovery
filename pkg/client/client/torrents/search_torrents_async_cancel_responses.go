// Code generated by go-swagger; DO NOT EDIT.

package torrents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SearchTorrentsAsyncCancelReader is a Reader for the SearchTorrentsAsyncCancel structure.
type SearchTorrentsAsyncCancelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchTorrentsAsyncCancelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchTorrentsAsyncCancelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewSearchTorrentsAsyncCancelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchTorrentsAsyncCancelInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /torrents/search/{id}:cancel] searchTorrentsAsyncCancel", response, response.Code())
	}
}

// NewSearchTorrentsAsyncCancelOK creates a SearchTorrentsAsyncCancelOK with default headers values
func NewSearchTorrentsAsyncCancelOK() *SearchTorrentsAsyncCancelOK {
	return &SearchTorrentsAsyncCancelOK{}
}

/*
SearchTorrentsAsyncCancelOK describes a response with status code 200, with default header values.

OK
*/
type SearchTorrentsAsyncCancelOK struct {
}

// IsSuccess returns true when this search torrents async cancel o k response has a 2xx status code
func (o *SearchTorrentsAsyncCancelOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search torrents async cancel o k response has a 3xx status code
func (o *SearchTorrentsAsyncCancelOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search torrents async cancel o k response has a 4xx status code
func (o *SearchTorrentsAsyncCancelOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search torrents async cancel o k response has a 5xx status code
func (o *SearchTorrentsAsyncCancelOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search torrents async cancel o k response a status code equal to that given
func (o *SearchTorrentsAsyncCancelOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the search torrents async cancel o k response
func (o *SearchTorrentsAsyncCancelOK) Code() int {
	return 200
}

func (o *SearchTorrentsAsyncCancelOK) Error() string {
	return fmt.Sprintf("[POST /torrents/search/{id}:cancel][%d] searchTorrentsAsyncCancelOK", 200)
}

func (o *SearchTorrentsAsyncCancelOK) String() string {
	return fmt.Sprintf("[POST /torrents/search/{id}:cancel][%d] searchTorrentsAsyncCancelOK", 200)
}

func (o *SearchTorrentsAsyncCancelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchTorrentsAsyncCancelNotFound creates a SearchTorrentsAsyncCancelNotFound with default headers values
func NewSearchTorrentsAsyncCancelNotFound() *SearchTorrentsAsyncCancelNotFound {
	return &SearchTorrentsAsyncCancelNotFound{}
}

/*
SearchTorrentsAsyncCancelNotFound describes a response with status code 404, with default header values.

Задача поиска не найдена
*/
type SearchTorrentsAsyncCancelNotFound struct {
}

// IsSuccess returns true when this search torrents async cancel not found response has a 2xx status code
func (o *SearchTorrentsAsyncCancelNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search torrents async cancel not found response has a 3xx status code
func (o *SearchTorrentsAsyncCancelNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search torrents async cancel not found response has a 4xx status code
func (o *SearchTorrentsAsyncCancelNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search torrents async cancel not found response has a 5xx status code
func (o *SearchTorrentsAsyncCancelNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search torrents async cancel not found response a status code equal to that given
func (o *SearchTorrentsAsyncCancelNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the search torrents async cancel not found response
func (o *SearchTorrentsAsyncCancelNotFound) Code() int {
	return 404
}

func (o *SearchTorrentsAsyncCancelNotFound) Error() string {
	return fmt.Sprintf("[POST /torrents/search/{id}:cancel][%d] searchTorrentsAsyncCancelNotFound", 404)
}

func (o *SearchTorrentsAsyncCancelNotFound) String() string {
	return fmt.Sprintf("[POST /torrents/search/{id}:cancel][%d] searchTorrentsAsyncCancelNotFound", 404)
}

func (o *SearchTorrentsAsyncCancelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchTorrentsAsyncCancelInternalServerError creates a SearchTorrentsAsyncCancelInternalServerError with default headers values
func NewSearchTorrentsAsyncCancelInternalServerError() *SearchTorrentsAsyncCancelInternalServerError {
	return &SearchTorrentsAsyncCancelInternalServerError{}
}

/*
SearchTorrentsAsyncCancelInternalServerError describes a response with status code 500, with default header values.

Ошибка на стороне сервера
*/
type SearchTorrentsAsyncCancelInternalServerError struct {
}

// IsSuccess returns true when this search torrents async cancel internal server error response has a 2xx status code
func (o *SearchTorrentsAsyncCancelInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search torrents async cancel internal server error response has a 3xx status code
func (o *SearchTorrentsAsyncCancelInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search torrents async cancel internal server error response has a 4xx status code
func (o *SearchTorrentsAsyncCancelInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search torrents async cancel internal server error response has a 5xx status code
func (o *SearchTorrentsAsyncCancelInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search torrents async cancel internal server error response a status code equal to that given
func (o *SearchTorrentsAsyncCancelInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the search torrents async cancel internal server error response
func (o *SearchTorrentsAsyncCancelInternalServerError) Code() int {
	return 500
}

func (o *SearchTorrentsAsyncCancelInternalServerError) Error() string {
	return fmt.Sprintf("[POST /torrents/search/{id}:cancel][%d] searchTorrentsAsyncCancelInternalServerError", 500)
}

func (o *SearchTorrentsAsyncCancelInternalServerError) String() string {
	return fmt.Sprintf("[POST /torrents/search/{id}:cancel][%d] searchTorrentsAsyncCancelInternalServerError", 500)
}

func (o *SearchTorrentsAsyncCancelInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
