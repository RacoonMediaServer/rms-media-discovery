// Code generated by go-swagger; DO NOT EDIT.

package torrents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostTorrentSearchIDCancelReader is a Reader for the PostTorrentSearchIDCancel structure.
type PostTorrentSearchIDCancelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTorrentSearchIDCancelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostTorrentSearchIDCancelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPostTorrentSearchIDCancelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostTorrentSearchIDCancelInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /torrent/search/{id}:cancel] PostTorrentSearchIDCancel", response, response.Code())
	}
}

// NewPostTorrentSearchIDCancelOK creates a PostTorrentSearchIDCancelOK with default headers values
func NewPostTorrentSearchIDCancelOK() *PostTorrentSearchIDCancelOK {
	return &PostTorrentSearchIDCancelOK{}
}

/*
PostTorrentSearchIDCancelOK describes a response with status code 200, with default header values.

OK
*/
type PostTorrentSearchIDCancelOK struct {
}

// IsSuccess returns true when this post torrent search Id cancel o k response has a 2xx status code
func (o *PostTorrentSearchIDCancelOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post torrent search Id cancel o k response has a 3xx status code
func (o *PostTorrentSearchIDCancelOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post torrent search Id cancel o k response has a 4xx status code
func (o *PostTorrentSearchIDCancelOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post torrent search Id cancel o k response has a 5xx status code
func (o *PostTorrentSearchIDCancelOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post torrent search Id cancel o k response a status code equal to that given
func (o *PostTorrentSearchIDCancelOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post torrent search Id cancel o k response
func (o *PostTorrentSearchIDCancelOK) Code() int {
	return 200
}

func (o *PostTorrentSearchIDCancelOK) Error() string {
	return fmt.Sprintf("[POST /torrent/search/{id}:cancel][%d] postTorrentSearchIdCancelOK ", 200)
}

func (o *PostTorrentSearchIDCancelOK) String() string {
	return fmt.Sprintf("[POST /torrent/search/{id}:cancel][%d] postTorrentSearchIdCancelOK ", 200)
}

func (o *PostTorrentSearchIDCancelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostTorrentSearchIDCancelNotFound creates a PostTorrentSearchIDCancelNotFound with default headers values
func NewPostTorrentSearchIDCancelNotFound() *PostTorrentSearchIDCancelNotFound {
	return &PostTorrentSearchIDCancelNotFound{}
}

/*
PostTorrentSearchIDCancelNotFound describes a response with status code 404, with default header values.

Задача поиска не найдена
*/
type PostTorrentSearchIDCancelNotFound struct {
}

// IsSuccess returns true when this post torrent search Id cancel not found response has a 2xx status code
func (o *PostTorrentSearchIDCancelNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post torrent search Id cancel not found response has a 3xx status code
func (o *PostTorrentSearchIDCancelNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post torrent search Id cancel not found response has a 4xx status code
func (o *PostTorrentSearchIDCancelNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post torrent search Id cancel not found response has a 5xx status code
func (o *PostTorrentSearchIDCancelNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post torrent search Id cancel not found response a status code equal to that given
func (o *PostTorrentSearchIDCancelNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post torrent search Id cancel not found response
func (o *PostTorrentSearchIDCancelNotFound) Code() int {
	return 404
}

func (o *PostTorrentSearchIDCancelNotFound) Error() string {
	return fmt.Sprintf("[POST /torrent/search/{id}:cancel][%d] postTorrentSearchIdCancelNotFound ", 404)
}

func (o *PostTorrentSearchIDCancelNotFound) String() string {
	return fmt.Sprintf("[POST /torrent/search/{id}:cancel][%d] postTorrentSearchIdCancelNotFound ", 404)
}

func (o *PostTorrentSearchIDCancelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostTorrentSearchIDCancelInternalServerError creates a PostTorrentSearchIDCancelInternalServerError with default headers values
func NewPostTorrentSearchIDCancelInternalServerError() *PostTorrentSearchIDCancelInternalServerError {
	return &PostTorrentSearchIDCancelInternalServerError{}
}

/*
PostTorrentSearchIDCancelInternalServerError describes a response with status code 500, with default header values.

Ошибка на стороне сервера
*/
type PostTorrentSearchIDCancelInternalServerError struct {
}

// IsSuccess returns true when this post torrent search Id cancel internal server error response has a 2xx status code
func (o *PostTorrentSearchIDCancelInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post torrent search Id cancel internal server error response has a 3xx status code
func (o *PostTorrentSearchIDCancelInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post torrent search Id cancel internal server error response has a 4xx status code
func (o *PostTorrentSearchIDCancelInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post torrent search Id cancel internal server error response has a 5xx status code
func (o *PostTorrentSearchIDCancelInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post torrent search Id cancel internal server error response a status code equal to that given
func (o *PostTorrentSearchIDCancelInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post torrent search Id cancel internal server error response
func (o *PostTorrentSearchIDCancelInternalServerError) Code() int {
	return 500
}

func (o *PostTorrentSearchIDCancelInternalServerError) Error() string {
	return fmt.Sprintf("[POST /torrent/search/{id}:cancel][%d] postTorrentSearchIdCancelInternalServerError ", 500)
}

func (o *PostTorrentSearchIDCancelInternalServerError) String() string {
	return fmt.Sprintf("[POST /torrent/search/{id}:cancel][%d] postTorrentSearchIdCancelInternalServerError ", 500)
}

func (o *PostTorrentSearchIDCancelInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
