// Code generated by go-swagger; DO NOT EDIT.

package torrents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// SearchTorrentsOKCode is the HTTP code returned for type SearchTorrentsOK
const SearchTorrentsOKCode int = 200

/*
SearchTorrentsOK OK

swagger:response searchTorrentsOK
*/
type SearchTorrentsOK struct {

	/*
	  In: Body
	*/
	Payload *SearchTorrentsOKBody `json:"body,omitempty"`
}

// NewSearchTorrentsOK creates SearchTorrentsOK with default headers values
func NewSearchTorrentsOK() *SearchTorrentsOK {

	return &SearchTorrentsOK{}
}

// WithPayload adds the payload to the search torrents o k response
func (o *SearchTorrentsOK) WithPayload(payload *SearchTorrentsOKBody) *SearchTorrentsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search torrents o k response
func (o *SearchTorrentsOK) SetPayload(payload *SearchTorrentsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchTorrentsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SearchTorrentsInternalServerErrorCode is the HTTP code returned for type SearchTorrentsInternalServerError
const SearchTorrentsInternalServerErrorCode int = 500

/*
SearchTorrentsInternalServerError Ошибка на стороне сервера

swagger:response searchTorrentsInternalServerError
*/
type SearchTorrentsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewSearchTorrentsInternalServerError creates SearchTorrentsInternalServerError with default headers values
func NewSearchTorrentsInternalServerError() *SearchTorrentsInternalServerError {

	return &SearchTorrentsInternalServerError{}
}

// WithPayload adds the payload to the search torrents internal server error response
func (o *SearchTorrentsInternalServerError) WithPayload(payload interface{}) *SearchTorrentsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search torrents internal server error response
func (o *SearchTorrentsInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchTorrentsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
