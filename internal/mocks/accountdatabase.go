// Code generated by MockGen. DO NOT EDIT.
// Source: internal/db/accounts.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	model "git.rms.local/RacoonMediaServer/rms-media-discovery/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockAccountDatabase is a mock of AccountDatabase interface.
type MockAccountDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockAccountDatabaseMockRecorder
}

// MockAccountDatabaseMockRecorder is the mock recorder for MockAccountDatabase.
type MockAccountDatabaseMockRecorder struct {
	mock *MockAccountDatabase
}

// NewMockAccountDatabase creates a new mock instance.
func NewMockAccountDatabase(ctrl *gomock.Controller) *MockAccountDatabase {
	mock := &MockAccountDatabase{ctrl: ctrl}
	mock.recorder = &MockAccountDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountDatabase) EXPECT() *MockAccountDatabaseMockRecorder {
	return m.recorder
}

// CreateAccount mocks base method.
func (m *MockAccountDatabase) CreateAccount(account model.Account) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccount", account)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAccount indicates an expected call of CreateAccount.
func (mr *MockAccountDatabaseMockRecorder) CreateAccount(account interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockAccountDatabase)(nil).CreateAccount), account)
}

// DeleteAccount mocks base method.
func (m *MockAccountDatabase) DeleteAccount(id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAccount", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAccount indicates an expected call of DeleteAccount.
func (mr *MockAccountDatabaseMockRecorder) DeleteAccount(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAccount", reflect.TypeOf((*MockAccountDatabase)(nil).DeleteAccount), id)
}

// LoadAccounts mocks base method.
func (m *MockAccountDatabase) LoadAccounts() ([]model.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadAccounts")
	ret0, _ := ret[0].([]model.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadAccounts indicates an expected call of LoadAccounts.
func (mr *MockAccountDatabaseMockRecorder) LoadAccounts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadAccounts", reflect.TypeOf((*MockAccountDatabase)(nil).LoadAccounts))
}
